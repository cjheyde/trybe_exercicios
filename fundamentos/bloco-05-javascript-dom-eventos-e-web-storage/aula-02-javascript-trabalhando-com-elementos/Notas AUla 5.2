Notas aula 5.2

parentNode : retorna o nó pai.

parentElement : retorna o elemento pai.

childNodes : retorna um NodeList com todos os nós filhos.

children : retorna um HTMLCollection com todos os elementos filhos.

firstChild : retorna o primeiro nó filho.

firstElementChild : retorna o primeiro elemento filho.

lastChild : retorna o último nó filho.

lastElementChild : retorna o último elemento filho.

nextSibling : retorna o próximo nó.

nextElementSibling : retorna o próximo elemento.

previousSibling : retorna o nó anterior.

previousElementSibling : retorna o elemento anterior.

cria elementos:

 // 1. Adicione a tag `h1` com o texto `Exercício 5.2 - JavaScript DOM` como filho da tag `body`;
      const elementH1 = document.createElement('h1');
      elementH1.innerText = 'Exercício 5.2 - JavaScript DOM';
      document.body.appendChild(elementH1);

      // 2. Adicione a tag `main` com a classe `main-content` como filho da tag `body`;
      const elementMain = document.createElement('main');
      elementMain.className = 'main-content';
      document.body.appendChild(elementMain);

      // 3. Adicione a tag `section` com a classe `center-content` como filho da tag `main` criada no passo 2;
      const elementSectionCenter = document.createElement('section');
      elementSectionCenter.className = 'center-content';
      elementMain.appendChild(elementsectionCenter);

      // 4. Adicione a tag `p` como filho do `section` criado no passo 3 e coloque algum texto;
      const paragraph = document.createElement('p');
      paragraph.innerHTML = 'Texto qualquer adicionado';
      elementsectionCenter.appendChild(paragraph);

      // 5. Adicione a tag `section` com a classe `left-content` como filho da tag `main` criada no passo 2;
      const elementsectionLeft = document.createElement('section');
      elementSectionLeft.className = 'left-content';
      elementMain.appendChild(elementsectionLeft);

      // 6. Adicione a tag `section` com a classe `right-content` como filho da tag `main` criada no passo 2;
      const elementSectionRight = document.createElement('section');
      elementSectionRight.className = 'right-content';
      elementMain.appendChild(elementRight);

      // 7. Adicione uma imagem com `src` configurado para o valor `https://picsum.photos/200` e classe `small-image`. Esse elemento deve ser filho do `section` criado no passo 5;
      const elementImg = document.createElement('img');
      elementImg.className = 'small-image';
      elementImg.src = 'https://picsum.photos/200';
      elementSectionLeft.appendChild(elementImg);

      // 8. Adicione uma lista não ordenada com os valores de 1 a 10 por extenso, ou seja, `um`, `dois`, `três`, ... como valores da lista. Essa lista deve ser filha do `section` criado no passo 6;
      const elementUl = document.createElement('ul');
      elementSectionRight.appendChild(elementUl);
      const arrayNumbers = ['Um', 'Dois', 'Três', 'Quatro', 'Cinco', 'Seis',
        'Sete', 'Oito', 'Nove', 'Dez']
      for (let num in arrayNumbers) {
        const elementLi = document.createElement('li');
        elementLi.innerHTML = arrayNumbers[num];
        elementUl.appendChild(elementLi);
      }

      // 9. Adicione 3 tags `h3`, todas sendo filhas do `main` criado no passo 2.
      for (let index = 1; index <= 3; index += 1) {
        const elementH3 = document.createElement('h3');
        elementH3.innerHTML = 'Show ' + index;
        elementMain.appendChild(elementH3);
      }


Remove elementos

  // 3. Remova a `section` criado no passo 5 (aquele que possui a classe `left-content`). Utilize a função `.removeChild()`;
      const sectionLeftContent = document.getElementsByClassName('left-content')[0];
      elementMain.removeChild(sectionLeftContent);
      
         // 6.Remova os dois últimos elementos ( nove e dez ) da lista criada no passo 8.
      ul.lastChild.remove();
      ul.lastChild.remove();
      
         

Recursos adicionais (opcional)
W3Schools - JavaScript HTML DOM Navigation - https://www.w3schools.com/js/js_htmldom_navigation.asp
