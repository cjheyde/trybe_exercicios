Web Storage

Você será capaz de:
Manipular o objeto localStorage ;
Manipular o objeto sessionStorage .

Para criar um cookie, você só precisa atribuir à propriedade document.cookie uma string contendo o nome e o valor do que se pretende armazenar:

document.cookie = 'email=isabella@email.com';

Por definição, o cookie é deletado quando fechamos o navegador. Para que isso não aconteça, você pode adicionar uma data para expiração como no exemplo abaixo:

document.cookie = 'email=isabella@email.com; expires=Thu, 17 Dec 2020 12:00:00 UTC';

Você pode adicionar também o parâmetro path que dirá ao navegador qual caminho o cookie que você criou pertence. Por padrão, o cookie pertence à página atual.

document.cookie = 'email=isabella@email.com; expires=Thu, 17 Dec 2020 12:00:00 UTC; path=/';

Para deletar o cookie, você não precisa especificar o valor que pretende deletar. Você pode deletá-lo passando uma data que já expirou:

Local e Session Storage
HTML Web Storage provê dois objetos para armazenamento de dados no cliente ( browser da pessoa), no formato de chave-valor de um modo mais intuitivo do que nos Cookies :
localStorage - salva os dados sem data de expiração . Os dados não serão removidos quando o browser for fechado, ou seja, eles ficarão disponíveis enquanto não forem explicitamente removidos.

sessionStorage - salva os dados apenas para a sessão atual. Os dados são removidos assim que a pessoa fecha a aba ( tab ) ou o navegador ( browser ).


Recursos adicionais
JSON.stringify documentation - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify

JSON.parse documentation - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse

Cookie advanced documentation - https://javascript.info/cookie

Web Storage advanced documentation - https://javascript.info/localstorage

Cookies vs LocalStorage vs SessionStorage - https://www.youtube.com/watch?v=AwicscsvGLg